<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.usu.student.mapper.StaffGraduationMapper">

	<resultMap type="kr.ac.usu.user.vo.StudentVO" id="studentMap" autoMapping="true">
		<id property="stdntNo" column="STDNT_NO"/>
		<result property="stdntNo" column="STDNT_NO"/>
		<association property="subject" autoMapping="true" />
		<collection property="scholarship" ofType="kr.ac.usu.scholarship.vo.ScholarshipVO" autoMapping="true">
			<association property="semester" autoMapping="true" />
			<association property="scholarshipList" autoMapping="true" />			
		</collection>
		<collection property="tuition" ofType="kr.ac.usu.tuition.vo.TuitionVO" autoMapping="true">
			<association property="semester" autoMapping="true" />
		</collection>
		<collection property="club" ofType="kr.ac.usu.club.vo.ClubVO" autoMapping="true">
			<association property="student" javaType="kr.ac.usu.user.vo.StudentVO" autoMapping="true" />
			<association property="facilities" javaType="kr.ac.usu.facilities.vo.FacilitiesVO" autoMapping="true">
				<association property="building" javaType="kr.ac.usu.facilities.vo.BuildingVO" autoMapping="true" />
			</association>
		</collection>
	</resultMap>
	
	<sql id="searchFrag">
		<where>
	    	<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
	    		<choose>
	    			<when test="simpleCondition.searchType eq 'stdntNm'">
	    				INSTR(STDNT_NM, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<when test="simpleCondition.searchType eq 'stdntNo'">
	    				INSTR(STDNT_NO, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<when test="simpleCondition.searchType eq 'sknrgSttusMajor1'">
	    				INSTR(SUBJCT_NM, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<otherwise>
	    				INSTR(STDNT_NM, #{simpleCondition.searchWord}) > 0
	    				OR
	    				INSTR(STDNT_NO, #{simpleCondition.searchWord}) > 0
	    				OR
	    				INSTR(SUBJCT_NM, #{simpleCondition.searchWord}) > 0
	    			</otherwise>
	    		</choose>
	    	</if>
	    </where>
	</sql>
	
	<sql id="listFromFrag">
		SELECT
            A.STDNT_NO
            , B.STDNT_NM
            , C.SUBJCT_NM
            , TO_CHAR(TO_DATE(D.SKNRG_STTUS_ENTSCH,'YY/MM/DD'),'YY/MM/DD') SKNRG_STTUS_ENTSCH
            , TO_CHAR(TO_DATE(D.SKNRG_STTUS_GRDTN,'YY/MM/DD'),'YY/MM/DD') SKNRG_STTUS_GRDTN
        FROM
            STUDENT A INNER JOIN STUDENT_INFORMATION B ON(A.STDNT_NO = B.STDNT_NO)
            INNER JOIN SCHOOL_REGISTER_STATUS D ON(D.STDNT_NO = A.STDNT_NO)
            INNER JOIN SUBJECT C ON (D.SKNRG_STTUS_MAJOR1 = C.SUBJCT_NO)
            INNER JOIN GRADUATION E ON (A.STDNT_NO = E.STDNT_NO)
	</sql>
	
	<select id="selectTotalRecord" resultType="int" parameterType="kr.ac.usu.paging.vo.PaginationInfo">
		SELECT COUNT(*)
		FROM
		(<include refid="listFromFrag" />)
			
		<include refid="searchFrag" />
	</select>
	
	<select id="selectGraduationList" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="kr.ac.usu.paging.vo.PaginationInfo" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT ROWNUM RNUM, B.*
			FROM(
				<include refid="listFromFrag" />
				) B
			<include refid="searchFrag" />
		) A
		<![CDATA[
	    WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	    ]]>
	</select>
	
	<!-- 졸업생 인적 정보 불러오기 -->
	<select id="selectGraduationInfo" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , B.STDNT_NM
			    , TO_CHAR(TO_DATE(B.STDNT_IHIDNUM1,'YY/MM/DD')) STDNT_IHIDNUM1
			    , B.STDNT_IHIDNUM2
			    , B.STDNT_ZIP
			    , B.STDNT_ADRES1
			    , B.STDNT_ADRES2
			    , B.STDNT_TELNO
			    , E1.COM_CODE_NM NLTY_SE
			    , E2.COM_CODE_NM SEXDSTN_SE
			    , B.STDNT_ACNUTNO
			    , B.ATCH_FILE_NO
			    , TO_CHAR(TO_DATE(C.SKNRG_STTUS_ENTSCH,'YY/MM/DD')) SKNRG_STTUS_ENTSCH
			    , TO_CHAR(TO_DATE(C.SKNRG_STTUS_GRDTN,'YY/MM/DD')) SKNRG_STTUS_GRDTN
			    , E3.COM_CODE_NM SKNRG_STTUS_ENTERENCE_SE
                , E4.COM_CODE_NM BANK_SE
			FROM
			    STUDENT A INNER JOIN STUDENT_INFORMATION B ON(A.STDNT_NO = B.STDNT_NO)
			    INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)			
			    INNER JOIN COM_CODE E1 ON (B.NLTY_SE = E1.COM_CODE)
			    INNER JOIN COM_CODE E2 ON (B.SEXDSTN_SE = E2.COM_CODE)
			    INNER JOIN COM_CODE E3 ON (C.SKNRG_STTUS_ENTERENCE_SE = E3.COM_CODE)
                INNER JOIN COM_CODE E4 ON (B.BANK_SE = E4.COM_CODE)
			WHERE
			    E3.COM_CODE_GRP = 'SEC012'
                AND E4.COM_CODE_GRP = 'SEC004'
				AND A.STDNT_NO = #{studentNo}
		) A
	</select>
	
	<!-- 졸업생 학적 정보 불러오기 -->
	<select id="selectGraduationRegisterStatus" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , D1.SUBJCT_NM SKNRG_STTUS_MAJOR1
			    , D2.SUBJCT_NM SKNRG_STTUS_MAJOR2
			    , D3.SUBJCT_NM SKNRG_STTUS_MINOR
			FROM
			    STUDENT A INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)
			    INNER JOIN SUBJECT D1 ON (C.SKNRG_STTUS_MAJOR1 = D1.SUBJCT_NO)
			    LEFT OUTER JOIN SUBJECT D2 ON (C.SKNRG_STTUS_MAJOR2 = D2.SUBJCT_NO)
			    LEFT OUTER JOIN SUBJECT D3 ON (C.SKNRG_STTUS_MINOR = D3.SUBJCT_NO) 
			WHERE
				A.STDNT_NO = #{studentNo}
		) A
	</select>
	
	<!-- 졸업생 장학금 정보 불러오기 -->
	<select id="selectGraduationScholarship" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , F.SCHLSHIP_NO
			    , G.SCHLSHIP_AMOUNT
			    , H.SCHO_NM
			    , E4.COM_CODE_NM PYMNT_SE
			    , E5.COM_CODE_NM SEMSTR_NO
			    
			FROM
			    STUDENT A LEFT JOIN SCHOLARSHIP_STUDENT F ON (A.STDNT_NO = F.STDNT_NO)
			    LEFT JOIN SCHOLARSHIP G ON (F.SCHLSHIP_NO = G.SCHLSHIP_NO)
			    LEFT OUTER JOIN SCHOLARSHIP_LIST H ON (G.SCHO_SE = H.SCHO_SE)
			    LEFT OUTER JOIN COM_CODE E4 ON (G.PYMNT_SE = E4.COM_CODE)
			    LEFT OUTER JOIN COM_CODE E5 ON ('0' || SUBSTR(G.SEMSTR_NO,5,1) = E5.COM_CODE)
			    
			WHERE
			    E4.COM_CODE_GRP = 'SEC025'
			    AND E5.COM_CODE_GRP = 'SEC018'
				AND A.STDNT_NO = #{studentNo}
			ORDER BY SEMSTR_NO
		) A
	</select>
	
	<!-- 졸업생 등록금 정보 불러오기 -->
	<select id="selectGraduationTuition" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , B.TUTN_NHT_NO
			    , B.TUTN_ETRNCF
			    , B.TUTN_TUTFEE
			    , B.TUTN_SCHLSHIP
			    , TO_CHAR(TO_DATE(B.TUTN_PAYDE,'YYYY/MM/DD')) TUTN_PAYDE
			    , C.SEMSTR_NO
			    , C.SEMSTR_YR
			    , C.SEMSTR
			    , NVL(B.TUTN_ETRNCF, 0) + NVL(B.TUTN_TUTFEE, 0) - NVL(B.TUTN_SCHLSHIP, 0) REAL_PAY
			FROM
			    STUDENT A INNER JOIN TUITION B ON(A.STDNT_NO = B.STDNT_NO)
			    INNER JOIN SEMESTER C ON (B.SEMSTR_NO = C.SEMSTR_NO)
			WHERE
				A.STDNT_NO = #{studentNo}
			ORDER BY SEMSTR_NO
		) A
	</select>
	
	<!-- 졸업생 동아리 정보 불러오기 -->
	<select id="selectGraduationClub" resultType="kr.ac.usu.user.vo.StudentVO" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
		    A.STDNT_NO
		    , B.CLUB_NO
		    , C.CLUB_NM
		    , D.FCLTS_NM
		    , F.BULD_NM
		    , E1.COM_CODE_NM CLUB_SE
		    , CASE WHEN A.STDNT_NO = C.STDNT_NO THEN '회장' ELSE '일반 회원' END STDNT_POSITION
		FROM
		    STUDENT A LEFT OUTER JOIN CLUB_MEMBER B ON(A.STDNT_NO = B.STDNT_NO)
		    INNER JOIN CLUB C ON (B.CLUB_NO = C.CLUB_NO)
		    INNER JOIN FACILITIES D ON (C.FCLTS_NO = D.FCLTS_NO)
		    INNER JOIN BUILDING F ON (D.BULD_NO = F.BULD_NO)
		    INNER JOIN COM_CODE E1 ON (C.CLUB_SE = E1.COM_CODE)
		WHERE
		    E1.COM_CODE_GRP = 'SEC006'
		    AND A.STDNT_NO = #{studentNo}
		) A
	</select>

</mapper>





























