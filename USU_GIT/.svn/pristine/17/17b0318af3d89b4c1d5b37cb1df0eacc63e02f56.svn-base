package kr.ac.usu.consultation.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.ac.usu.consultation.service.StaffConsultationRequestService;
import kr.ac.usu.consultation.service.StaffConsultationService;
import kr.ac.usu.consultation.vo.ConsultationRequestVO;
import kr.ac.usu.consultation.vo.ConsultationVO;
import kr.ac.usu.paging.BootstrapPaginationRenderer;
import kr.ac.usu.paging.vo.PaginationInfo;
import kr.ac.usu.paging.vo.SearchVO;

/**
 * <pre>
 * 
 * </pre>
 * @author 문선영
 * @since 2023. 11. 13.
 * @version 1.0
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일        수정자       수정내용
 * --------     --------    ----------------------
 * 2023. 11. 13.      문선영       최초작성
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */ 
@Controller
@RequestMapping("/staff/consultation")
public class StaffConsultationController {
	
	@Inject
	private StaffConsultationRequestService requestService;
	
	@Inject StaffConsultationService service;
	
	// 상담 신청 UI 불러오는 메소드
	@GetMapping("/consultationRequestListUI")
	public String consultationRequestView() {
		return "staff/consultation/consultationRequestUI";
	}
	
	
	// 상담 신청 리스트 불러오는 메소드
	@GetMapping("ajax/consultationRequest")
	public String listConsultationRequestData(
		@ModelAttribute("simpleCondition") SearchVO simpleCondition
		, @RequestParam(value="page", required = false, defaultValue = "1") int currentPage
		, Model model
	) {
		PaginationInfo<ConsultationRequestVO> paging = new PaginationInfo<>(10,5);
		paging.setSimpleCondition(simpleCondition);
		paging.setCurrentPage(currentPage);
		
		requestService.retrieveConsultationRequestList(paging);
		
		paging.setRenderer(new BootstrapPaginationRenderer());
		
		model.addAttribute("paging", paging);
		
		return "jsonView";
	}
	
	
	// 상담 내역 UI 불러오는 메소드
	@GetMapping("/consultationUI")
	public String consultationView() {
		return "staff/consultation/consultationUI";
	}
	
	// 상담 내역 리스트 불러오는 메소드
	@GetMapping("ajax/consultation")
	public String listConsultationData(
		@ModelAttribute("simpleCondition") SearchVO simpleCondition
		, @RequestParam(value="page", required = false, defaultValue = "1") int currentPage
		, Model model		
	) {
		PaginationInfo<ConsultationVO> paging = new PaginationInfo<>(10,5);
		paging.setSimpleCondition(simpleCondition);
		paging.setCurrentPage(currentPage);
		
		service.retrieveConsultationList(paging);
		
		paging.setRenderer(new BootstrapPaginationRenderer());
		
		model.addAttribute("paging", paging);
		
		return "jsonView";
	}
	
	// 상담 내역 상세 페이지 조회하는 메소드
	@RequestMapping("ajax/consultationView")
	public String consultationDetailView(
		@RequestParam("what") String consultNo
		, Model model	
	) {
		ConsultationVO consultationInfo = service.retrieveConsultationInfo(consultNo);
		
		model.addAttribute("consultationInfo", consultationInfo);

		return "staff/consultation/consultationView";
	}
	
	// 상단 신청 내역 상세 페이지 조회하는 메소드
	@RequestMapping("ajax/consultationRequestView")
	public String consultationRequestDetailView(
		@RequestParam("what") String consultNo
		, Model model	
	) {
		ConsultationRequestVO consultationRequestInfo = requestService.retrieveConsultationRequestInfo(consultNo);
		
		model.addAttribute("consultationRequestInfo", consultationRequestInfo);
		
		return "staff/consultation/consultationRequestView";
	}

}






















