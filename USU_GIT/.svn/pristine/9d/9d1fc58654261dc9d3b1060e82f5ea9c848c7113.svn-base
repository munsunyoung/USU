package kr.ac.usu.classroom.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.ac.usu.classroom.service.ProfessorClassroomBaseUIService;
import kr.ac.usu.common.mapper.CommonOptionsMapper;
import kr.ac.usu.lecture.vo.LectureVO;
import kr.ac.usu.user.vo.ComCodeVO;
import lombok.extern.slf4j.Slf4j;
/**
 * 
 * @author PC-21
 *
 * @author 김재성
 * @since 2023. 11. 26.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet 
 * <pre>
 * [[개정이력(Modification Information)]]
 *    수정일           수정자             수정내용
 * -----------     --------    ----------------------
 * 2023.11.26.       김재성       최초작성
 * 2023.11.27.       김재성       URL 맵핑 및 강의목록 출력
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/professor/classroom")
public class ProfessorClassroomBaseUIController {
	
	@Inject
	private ProfessorClassroomBaseUIService baseUIService;
	
	@Inject
	private CommonOptionsMapper commonMapper;
	
	//클래스룸 베이스 UI
	@GetMapping("/classroomBaseUI")
	public String classroomBaseUI(
			Model model
			,Authentication principal
	) {
		String prfsorNo = principal.getName();
		List<LectureVO> lectureList =baseUIService.retrieveClassroomProfessorLecture(prfsorNo);
		
		log.info("클래스룸 메뉴 클릭시 가져오는 강의관련 데이터 : {}",lectureList);
		
		model.addAttribute("lectureList",lectureList);
		
		return "professor/classroom/professorClassroomBaseUI";
	}
	
	// 클래스룸 페이지 시험 Tab View
	@GetMapping("/test")
	public String classroomTestTabUI(
	
	) {
		
		return "ajax/professor/classroom/professorClassroomTestView";
	}
	
	// 클래스룸 페이지 시험 Tab add View 
	@GetMapping("/addTest")
	public String classroomAddTestTabUI(
			Model model
	) {
		List<ComCodeVO> testSe = commonMapper.getComeCodeList("SEC021");
		
		model.addAttribute("testSe",testSe);
		
		return "ajax/professor/classroom/professorClassroomAddTestView";
	}
	
	@GetMapping("/assignment")
	public String classroomAssignmentTabUI() {
		
		return "ajax/professor/classroom/professorClassroomAssignmentView";
	}
	
	@GetMapping("/data")
	public String classroomDataTabUI() {
		
		return "ajax/professor/classroom/professorClassroomDataView";
	}
	
	@GetMapping("/onlineLecture")
	public String classroomLectureOnlineTabUI() {
		
		return "ajax/professor/classroom/professorClassroomOnlineLectureView";
	}
	
	
	

}