<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>    
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<!-- Custom fonts for this template-->
<link href="${pageContext.request.contextPath }/resources/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
<link
	href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
	rel="stylesheet">

<!-- Custom styles for this template-->
<link href="${pageContext.request.contextPath }/resources/css/sb-admin-2.min.css" rel="stylesheet">
<link href="${pageContext.request.contextPath }/resources/css/layout.css" rel="stylesheet">
<link href="${pageContext.request.contextPath }/resources/css/font.css" rel="stylesheet">

<script src="${pageContext.request.contextPath }/resources/vendor/jquery/jquery.min.js"></script>
<security:csrfMetaTags/>
<script>
	const SERVERSIDEADDRESS = 'localhost';

	const csrfValue = $("meta[name='_csrf']").attr("content");
	const csrfHeader = $("meta[name='_csrf_header']").attr("content");
	
	
	$.ajaxSetup({
		headers : {
		[csrfHeader] : csrfValue
		}
   });
	
	
	// 웹소켓 선언 위치
	var attedanceSocket;
	
	
	// 작성자 김석호  최초작성 2023.11.17 
	// 아작스로 컨텐츠만 바꾸기 때문에 컨텐츠 내부 변화를 감지해서 웹소켓을 정상적으로 처리해주기 위한 핸들러
	$(()=>{
		//감시 대상 선택
		const observationTarget = document.querySelector('#content');
		
		// 감시자 인스턴스 만들기
		let observer = new MutationObserver((mutations) => {
// 			console.log(mutations);
			$.each(mutations[0].removedNodes,function(i,v){
				
				// 수강신청 웹소켓을 닫기위한 코드
				if(v.id == "thisIsAttendanceLecturePage"){
					attedanceSocket.close();
					attedanceSocket = null;
// 					console.log("성공적으로 들어옴");
// 					console.log("웹소켓 닫기 전 상태 : ", attedanceSocket);
// 					console.log("웹소켓 닫은 후 상태 : ", attedanceSocket);
				}
				
			})
		})
		// 감시자의 설정
		let option = {
		    attributes: true,
		    childList: true,
		    characterData: true
		};

		// 대상 노드에 감시자 전달
		observer.observe(observationTarget, option);
	})

	//thisIsAttendanceLecturePage
</script>