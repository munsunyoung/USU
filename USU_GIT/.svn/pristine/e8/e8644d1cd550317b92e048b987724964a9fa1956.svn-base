<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="kr.ac.usu.consultation.mapper.StudentConsultationMapper">


	<insert id="insertConsultationRequest"
		parameterType="kr.ac.usu.consultation.vo.ConsultationRequestVO">

		<selectKey keyProperty="cnsltNo" resultType="String" order="BEFORE">
			SELECT
			REPLACE(
			'R' ||
			<choose>
				<!-- 학과상담인 경우 -->
				<when test="cnsltSe == '01'">
					'01'
				</when>
				<!-- 취업상담인 경우 -->
				<when test="cnsltSe == '02'">
					'02'
				</when>
				<!-- 기본값 (필요에 따라 설정) -->
				<otherwise>
					'00'
				</otherwise>
			</choose>
			||
			'${stdntNo}' || 
			TO_CHAR(SEQ_CNSLT_NO.NEXTVAL,'000000'), ' ', '') AS cnsltNo
			FROM DUAL
		</selectKey>

		<!-- 상담 정보 삽입 -->
		INSERT INTO CONSULTATION_REQUEST (
		CNSLT_NO, STDNT_NO, CNSLT_REQUST_DATE, CNSLT_SE,
		CNSLT_REQUST_TIME,
		CNSLT_REQUST_CN, CNSLT_REQUST_PROCESS
		) VALUES (
		#{cnsltNo}, #{stdntNo}, 
		 TO_CHAR(TO_DATE(#{cnsltRequstDate}, 'YYYY-MM-DD'), 'YY/MM/DD') , 
		 #{cnsltSe},
		<!-- 공통 코드를 사용하는 부분 -->
		<!-- 상담 시간을 기본값으로 설정 (예: 'A1') -->
		#{cnsltRequstTime}
		,
		<!-- 나머지는 그대로 사용 -->
		#{cnsltRequstCn}, #{cnsltRequstProcess}
		)
	</insert>


 <sql id="searchFrag">
        <if test="simpleCondition neq null and simpleCondition.searchWord neq null">
            <!-- 전체검색 -->
            <![CDATA[
                AND (
                    INSTR(CNSLT_REQUST_PROCESS, #{simpleCondition.searchWord}) > 0
                    OR INSTR(STDNT_NO, #{simpleCondition.searchWord}) > 0
                )
            ]]>
        </if>
    </sql>

    <sql id="fromFrag">
        SELECT
            A.CNSLT_NO,
            A.STDNT_NO,
            A.CNSLT_REQUST_DATE,
            A.CNSLT_SE,
            A.CNSLT_REQUST_TIME,
            A.CNSLT_REQUST_CN,
            A.CNSLT_REQUST_RETURN,
            C.COM_CODE_NM AS CNSLT_REQUST_PROCESS
        FROM
            CONSULTATION_REQUEST A
            INNER JOIN COM_CODE C ON (A.CNSLT_REQUST_PROCESS = C.COM_CODE)
        WHERE
            C.COM_CODE_GRP = 'SEC013'
            <include refid="searchFrag" />
    </sql>

    <!-- 상담 신청 목록 조회 
    simpleCondition{"searchType":"","searchWord":""}
    currentPage=4
    -->
    <select id="selectConsultationRequestList" resultType="kr.ac.usu.consultation.vo.ConsultationRequestVO"
            parameterType="kr.ac.usu.paging.vo.PaginationInfo">
       SELECT T.*
		FROM
		(
		    SELECT ROW_NUMBER() OVER(ORDER BY A.CNSLT_REQUST_DATE DESC) RNUM,
		        A.CNSLT_NO,
		        A.STDNT_NO,
		        A.CNSLT_REQUST_DATE,
		        A.CNSLT_SE,
		        A.CNSLT_REQUST_PROCESS,
		        (SELECT Q.COM_CODE_NM FROM com_code Q WHERE Q.com_code_grp = 'SEC011' AND Q.COM_CODE = A.CNSLT_REQUST_TIME) CNSLT_REQUST_TIME ,         
		        A.CNSLT_REQUST_CN,
		        A.CNSLT_REQUST_RETURN,
		        C.COM_CODE_NM AS COMPL_SE 
		    FROM
		        CONSULTATION_REQUEST A
		        INNER JOIN COM_CODE C ON (A.CNSLT_REQUST_PROCESS = C.COM_CODE)
		        INNER JOIN CONSULTATION_REQUEST F ON (A.CNSLT_NO = F.CNSLT_NO)
		    WHERE
		        C.COM_CODE_GRP = 'SEC013'
		        AND A.STDNT_NO = #{detailCondition.stdntNo}
		) T
		WHERE T.RNUM BETWEEN (#{currentPage}*10 - (10-1)) AND (#{currentPage}*10)
    </select>

    <!-- 상담 신청 목록 불러오기 -->
    <select id="selectTotalRecord" resultType="int" parameterType="kr.ac.usu.paging.vo.PaginationInfo">
        SELECT COUNT(*)
        FROM CONSULTATION_REQUEST A
	        INNER JOIN COM_CODE C ON (A.CNSLT_REQUST_PROCESS = C.COM_CODE)
	        INNER JOIN CONSULTATION_REQUEST F ON (A.CNSLT_NO = F.CNSLT_NO)
        WHERE C.COM_CODE_GRP = 'SEC013'
		AND A.STDNT_NO = #{detailCondition.stdntNo}
    </select>


</mapper>
























